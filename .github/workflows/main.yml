name: CD
on:
  push:
    branches:
      - main
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKERHUB_KEY: ${{ secrets.DOCKER_KEY }}
  IMAGE_NAME: node-app
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_KEY }}
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Update values.yaml
        run: |
          cd nodeapp
          sed -i 's|APP_VERSION:.*|APP_VERSION: '${{ github.sha }}'|' values.yaml 
          git config --global user.name 'sgvdevops'
          git config --global user.email 'sgvdevops@gmail.com'
          git add values.yaml
          git commit -m "Update values.yaml"
          git push
    
      # - name: Set up AWS CLI
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-2  
      
      # - name: Set up kubectl
      #   uses: azure/setup-kubectl@v4
      #   with:
      #     version: 'v1.24.0' 
      # - name: Install ArgoCD
      #   run: |
      #     kubectl create namespace argocd
      #     kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
            
      # - name: Expose ArgoCD API server
      #   run: |
      #     kubectl port-forward svc/argocd-server -n argocd 5000:443 &

      # - name: Set up ArgoCD CLI
      #   run: |
      #     curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v2.9.3/argocd-linux-amd64
      #     chmod +x /usr/local/bin/argocd
  
      # - name: Login to ArgoCD
      #   env:
      #     ARGOCD_SERVER: argocd-server.argocd.svc.cluster.local  # Default service URL inside the cluster
      #     ARGOCD_USERNAME: admin  # Default username is 'admin'
      #     ARGOCD_PASSWORD: $(kubectl get secret -n argocd argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 --decode)  # Fetch the password
      #   run: |
      #     echo "Logging in to ArgoCD..."
      #     argocd login $ARGOCD_SERVER --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --insecure
        
      # - name: Verify login
      #   run: argocd account list 
  
      # - name: Create ArgoCD Application
      #   run: |
      #     argocd app create nodeapp \
      #       --repo https://github.com/sgvdevops/node-app.git \
      #       --path nodeapp/ \
      #       --dest-server https://kubernetes.default.svc \
      #       --dest-namespace default \
      #       --sync-policy automated \
      #       --auto-prune \
      #       --self-heal
  
      # - name: Wait for ArgoCD Application Sync
      #   run: |
      #     argocd app wait my-application --health --timeout 600
